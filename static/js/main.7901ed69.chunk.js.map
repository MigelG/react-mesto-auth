{"version":3,"sources":["images/logo/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/AuthForm.js","components/Login.js","components/Register.js","components/ImagePopup.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","images/tooltipSuccess.svg","images/tooltipFail.svg","components/InfoTooltip.js","utils/api.js","utils/auth.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","email","handleQuit","loggedIn","useState","menu","setMenu","className","src","logo","alt","path","element","onClick","to","CurrentUserContext","React","createContext","Card","cardLikeButtonClassName","_id","name","link","likes","onCardClick","owner","onCardLike","onCardDelete","currentUser","useContext","isOwn","some","i","id","type","length","Main","props","onEditAvatar","avatar","onEditProfile","about","onAddPlace","cards","map","card","Footer","Date","getFullYear","AuthForm","handleSubmit","handleChangeEmail","password","handleChangePassword","button","onSubmit","noValidate","placeholder","value","onChange","required","Login","onLogin","setEmail","setPassword","e","preventDefault","target","Register","onRegister","ImagePopup","onPopupClick","isOpen","onClose","PopupWithForm","title","children","EditProfilePopup","onUpdateUser","setName","description","setDescription","useEffect","minLength","maxLength","onUpdateAvatar","avatarRef","useRef","current","ref","setLink","InfoTooltip","logoSuccess","logoFail","api","baseUrl","headers","this","_baseUrl","_headers","Promise","all","getUserInfo","getCardList","fetch","then","_checkResponse","data","method","body","JSON","stringify","res","ok","json","reject","authorization","BASE_URL","checkResponse","status","App","setCurrentUser","setCards","setLoggedIn","currentEmail","setCurrentEmail","navigate","useNavigate","handlePopupClick","event","classList","contains","closeAllPopups","token","localStorage","getItem","auth","catch","err","console","log","statusText","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isBigImagePopupOpen","setIsBigImagePopupOpen","selectedCard","setSelectedCard","isInfoTooltipOpen","setIsInfoTooltipOpen","isInfoTooltipType","setIsInfoTooltipType","handleCardClick","handleInfoTooltipOpen","handleInfoTooltipType","handleEsc","key","document","addEventListener","removeEventListener","Provider","removeItem","onImagePopup","isLiked","likeCard","newCard","state","c","deleteCard","filter","setItem","user","saveUserInfo","AddPlacePopup","addCard","EditAvatarPopup","editAvatar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7901ed69.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6129e9de.svg\";","import logo from '../images/logo/logo.svg';\r\nimport { Link, Route, Routes } from 'react-router-dom';\r\nimport { useState } from 'react';\r\n\r\nfunction Header({ email, handleQuit, loggedIn }) {\r\n\r\n    const [menu, setMenu] = useState(false);\r\n    function handleShowMenu() {\r\n        setMenu(!menu);\r\n    }\r\n\r\n    return (\r\n        <header className={`header ${menu && loggedIn ? 'header_active' : null}`}>\r\n            <img src={logo} alt='Логотип' className='header__logo' />\r\n            <Routes>\r\n                <Route path='/react-mesto-auth' element={\r\n                    <>\r\n                        <button onClick={handleShowMenu} className={`header__menu-logo ${menu ? 'header__menu-logo_active' : null}`}>\r\n                            <span />\r\n                        </button>\r\n                        <div className={`header__info ${menu ? 'header__info_active' : null}`}>\r\n                            <span className='header__email'>{email}</span>\r\n                            <Link className='header__link' to='/react-mesto-auth/sign-in' onClick={handleQuit}>Выйти</Link>\r\n                        </div>\r\n                    </>\r\n                } />\r\n                <Route path='/react-mesto-auth/sign-in' element={\r\n                    <Link className='header__link' to='/react-mesto-auth/sign-up'>Регистрация</Link>\r\n                } />\r\n                <Route path='/react-mesto-auth/sign-up' element={\r\n                    <Link className='header__link' to='/react-mesto-auth/sign-in'>Войти</Link>\r\n                } />\r\n            </Routes>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from \"react\";\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Card({ _id, name, link, likes, onCardClick, owner, onCardLike, onCardDelete }) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const isOwn = owner._id === currentUser._id;\r\n    const isLiked = likes.some(i => i._id === currentUser._id);\r\n    let cardLikeButtonClassName;\r\n    if (isLiked) {\r\n        cardLikeButtonClassName = \"place__like-button_active\";\r\n    }\r\n\r\n    function handleClick() {\r\n        onCardClick({ name, link, onCardClick });\r\n    }\r\n\r\n    function handleLikeClick() {\r\n        onCardLike({ _id, likes });\r\n    }\r\n\r\n    function handleDeleteClick() {\r\n        onCardDelete({ id: _id });\r\n    }\r\n\r\n    return (\r\n        <article className=\"place\">\r\n            {isOwn && <button onClick={handleDeleteClick} type=\"button\" className=\"button place__delete-button\"></button>}\r\n            <div className=\"place__image-container\">\r\n                <img onClick={handleClick} className=\"place__image\" src={link} alt={name} />\r\n            </div>\r\n            <div className=\"place__caption\">\r\n                <h2 className=\"place__title\">{name}</h2>\r\n                <div>\r\n                    <button onClick={handleLikeClick} type=\"button\" className={`button place__like-button ${cardLikeButtonClassName}`}></button>\r\n                    <p className=\"place__like-score\">{likes.length}</p>\r\n                </div>\r\n            </div>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Main(props) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    return (\r\n        <main className=\"main\">\r\n            <section className=\"profile\">\r\n                <div onClick={props.onEditAvatar} className=\"profile__avatar\">\r\n                    <img className=\"profile__img\" src={currentUser.avatar} alt=\"Аватарка\" />\r\n                </div>\r\n\r\n                <div className=\"profile__info\">\r\n                    <h1 className=\"profile__username\">{currentUser.name}</h1>\r\n                    <button onClick={props.onEditProfile} type=\"button\" className=\"button profile__edit-button\"></button>\r\n                    <p className=\"profile__job\">{currentUser.about}</p>\r\n                </div>\r\n                <button onClick={props.onAddPlace} type=\"button\" className=\"button profile__add-button\"></button>\r\n            </section>\r\n\r\n            <section className=\"places\">\r\n                {\r\n                    props.cards.map((card) => <Card\r\n                        key={card._id}\r\n                        _id={card._id}\r\n                        name={card.name}\r\n                        link={card.link}\r\n                        likes={card.likes}\r\n                        onCardClick={props.onCardClick}\r\n                        owner={card.owner}\r\n                        onCardLike={props.onCardLike}\r\n                        onCardDelete={props.onCardDelete}\r\n                    />)\r\n                }\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;","function Footer() {\r\n    return (\r\n        <footer className=\"footer\">&copy; {new Date().getFullYear()} Mesto Russia</footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","function AuthForm({ name, handleSubmit, email, handleChangeEmail, password, handleChangePassword, button }) {\r\n\r\n    return (\r\n        <form name={name} className='register__form' onSubmit={handleSubmit} noValidate>\r\n            <input type='email' name='email' placeholder='E-mail'\r\n                className='register__input' value={email} onChange={handleChangeEmail} required />\r\n            <input type='password' name='password' placeholder='Пароль'\r\n                className='register__input' value={password} onChange={handleChangePassword} required />\r\n            <button type='submit' className='register__submit-button'>{button}</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AuthForm;","import { useState } from 'react';\r\nimport AuthForm from './AuthForm.js';\r\n\r\nfunction Login({ onLogin }) {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    function handleChangeEmail(e) {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    function handleChangePassword(e) {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (!email || !password) {\r\n            return;\r\n        }\r\n        onLogin(email, password, setEmail, setPassword);\r\n    }\r\n\r\n    return (\r\n        <div className='register'>\r\n            <h1 className='register__title'>Войти</h1>\r\n            <AuthForm\r\n                name='login'\r\n                handleSubmit={handleSubmit}\r\n                email={email}\r\n                handleChangeEmail={handleChangeEmail}\r\n                password={password}\r\n                handleChangePassword={handleChangePassword}\r\n                button='Войти' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import { Link } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport AuthForm from './AuthForm.js';\r\n\r\nfunction Register({ onRegister }) {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    function handleChangeEmail(e) {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    function handleChangePassword(e) {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onRegister(email, password);\r\n    }\r\n\r\n    return (\r\n        <div className='register'>\r\n            <h1 className='register__title'>Регистрация</h1>\r\n            <AuthForm\r\n                name='register'\r\n                handleSubmit={handleSubmit}\r\n                email={email}\r\n                handleChangeEmail={handleChangeEmail}\r\n                password={password}\r\n                handleChangePassword={handleChangePassword}\r\n                button='Зарегестрироваться' />\r\n            <p className='register__option-text'>Уже зарегестрированы? <Link className='register__option-link' to='/react-mesto-auth/sign-in'>Войти</Link></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;","function ImagePopup(props) {\r\n\r\n    return (\r\n        <div onClick={props.onPopupClick} className={`popup popup_type_big-image ${props.isOpen ? \"popup_opened\" : \"\"}`} >\r\n            <div className=\"popup__container popup__container_type_big-image\">\r\n                <button onClick={props.onClose} type=\"button\" className=\"button popup__close-button popup__close-button_type_big-image\"></button>\r\n                <img className=\"popup__image\" src={props.card.link} alt={props.card.name} />\r\n                <p className=\"popup__caption\">{props.card.name}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImagePopup;","function PopupWithForm(props) {\r\n    return (\r\n        <div onClick={props.onPopupClick} className={`popup popup_type_${props.name} ${props.isOpen ? \"popup_opened\" : \"\"}`}>\r\n            <div className={`popup__container popup__container_type_${props.name}`}>\r\n                <button onClick={props.onClose} type=\"button\" className=\"button popup__close-button\"></button>\r\n                <h2 className=\"popup__title\">{props.title}</h2>\r\n                <form onSubmit={props.onSubmit} name={props.name} className=\"popup__form\" noValidate>\r\n                    {props.children}\r\n                    <button type=\"submit\" className=\"popup__submit-button\">{props.button}</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PopupWithForm;","import React, { useState } from \"react\";\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditProfilePopup({ isOpen, onClose, onPopupClick, onUpdateUser }) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    function handleChangeName(e) {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    function handleChangeDescription(e) {\r\n        setDescription(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onUpdateUser({\r\n            name,\r\n            about: description,\r\n        });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setName(currentUser.name);\r\n        setDescription(currentUser.about);\r\n    }, [currentUser, isOpen]);\r\n\r\n    return (\r\n        <PopupWithForm\r\n            name=\"edit\"\r\n            title=\"Редактировать профиль\"\r\n            button=\"Сохранить\"\r\n            onSubmit={handleSubmit}\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onPopupClick={onPopupClick}>\r\n            <input value={name || ''} onChange={handleChangeName} id=\"name\" type=\"text\" name=\"name\" placeholder=\"Введите имя\"\r\n                className=\"popup__input popup__input_type_name\" required minLength=\"2\" maxLength=\"40\" />\r\n            <span id=\"name-error\" className=\"popup__error\"></span>\r\n            <input value={description || ''} onChange={handleChangeDescription} id=\"about\" type=\"text\" name=\"about\" placeholder=\"Род деятельности\"\r\n                className=\"popup__input popup__input_type_job\" required minLength=\"2\" maxLength=\"200\" />\r\n            <span id=\"about-error\" className=\"popup__error\"></span>\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default EditProfilePopup;\r\n\r\n","import React, { useEffect } from \"react\";\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditProfilePopup({ isOpen, onClose, onPopupClick, onUpdateAvatar }) {\r\n    const avatarRef = React.useRef();\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onUpdateAvatar({\r\n            avatar: avatarRef.current.value\r\n        });\r\n    }\r\n\r\n    //Очистка формы\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            avatarRef.current.value = '';\r\n        }\r\n    }, [isOpen])\r\n\r\n    return (\r\n        <PopupWithForm\r\n            name=\"avatar\"\r\n            title=\"Обновить аватар\"\r\n            button=\"Сохранить\"\r\n            onSubmit={handleSubmit}\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onPopupClick={onPopupClick}>\r\n            <input ref={avatarRef} id=\"avatar\" type=\"url\" name=\"avatar\" placeholder=\"Введите ссылку\"\r\n                className=\"popup__input popup__input_type_avatar\" required />\r\n            <span id=\"avatar-error\" className=\"popup__error\"></span>\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default EditProfilePopup;\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditProfilePopup({ isOpen, onClose, onPopupClick, onAddPlace }) {\r\n    const [name, setName] = useState('');\r\n    const [link, setLink] = useState('');\r\n\r\n    function handleChangeName(e) {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    function handleChangeLink(e) {\r\n        setLink(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onAddPlace({\r\n            name,\r\n            link\r\n        });\r\n    }\r\n\r\n    //Очистка формы\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            setName('');\r\n            setLink('');\r\n        }\r\n    }, [isOpen])\r\n\r\n    return (\r\n        <PopupWithForm\r\n            name=\"add\"\r\n            title=\"Новое место\"\r\n            button=\"Создать\"\r\n            onSubmit={handleSubmit}\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onPopupClick={onPopupClick}>\r\n            <input value={name} onChange={handleChangeName} id=\"placeName\" type=\"text\" name=\"name\" placeholder=\"Название\"\r\n                className=\"popup__input popup__input_type_place\" required minLength=\"2\" maxLength=\"30\" />\r\n            <span id=\"placeName-error\" className=\"popup__error\"></span>\r\n            <input value={link} onChange={handleChangeLink} id=\"link\" type=\"url\" name=\"link\" placeholder=\"Ссылка на картинку\"\r\n                className=\"popup__input popup__input_type_link\" required />\r\n            <span id=\"link-error\" className=\"popup__error\"></span>\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default EditProfilePopup;\r\n\r\n","export default __webpack_public_path__ + \"static/media/tooltipSuccess.a9eb6caf.svg\";","export default __webpack_public_path__ + \"static/media/tooltipFail.d4ce2a26.svg\";","import logoSuccess from '../images/tooltipSuccess.svg'\r\nimport logoFail from '../images/tooltipFail.svg'\r\n\r\nfunction InfoTooltip({ isOpen, onClose, type }) {\r\n    return (\r\n        <div className={`tooltip ${isOpen ? 'tooltip_opened' : ''}`}>\r\n            <div className='tooltip__container'>\r\n                <button onClick={onClose} type='button' className='button tooltip__close-button'></button>\r\n                <img className='tooltip__image' src={type ? logoSuccess : logoFail} alt={type ? 'Успех!' : 'Неудача('} />\r\n                <h2 className='tooltip__title'>{type ? 'Вы успешно зарегестрировались!' : 'Что-то пошло не так! Попробуйте еще раз.'}</h2>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InfoTooltip;","class Api {\r\n    constructor({ baseUrl, headers }) {\r\n        this._baseUrl = baseUrl;\r\n        this._headers = headers;\r\n    }\r\n\r\n    getAppInfo() {\r\n        return Promise.all([this.getUserInfo(), this.getCardList()])\r\n    }\r\n\r\n    getCardList() {\r\n        return fetch(this._baseUrl + '/cards', {\r\n            headers: this._headers\r\n        })\r\n            .then(this._checkResponse);\r\n    }\r\n\r\n    addCard(data) {\r\n        return fetch(this._baseUrl + '/cards', {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(this._checkResponse);\r\n    }\r\n\r\n    getUserInfo() {\r\n        return fetch(this._baseUrl + '/users/me', {\r\n            headers: this._headers\r\n        })\r\n            .then(this._checkResponse);\r\n    }\r\n\r\n    saveUserInfo(data) {\r\n        return fetch(this._baseUrl + '/users/me', {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(this._checkResponse);\r\n    }\r\n\r\n    deleteCard(id) {\r\n        return fetch(this._baseUrl + `/cards/${id}`, {\r\n            method: 'DELETE',\r\n            headers: this._headers,\r\n        })\r\n            .then(this._checkResponse);\r\n    }\r\n\r\n    likeCard(id, method) {\r\n        return fetch(this._baseUrl + `/cards/likes/${id}`, {\r\n            method: `${method}`,\r\n            headers: this._headers,\r\n        })\r\n            .then(this._checkResponse);\r\n    }\r\n\r\n    editAvatar(avatar) {\r\n        return fetch(this._baseUrl + '/users/me/avatar', {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify(avatar),\r\n        })\r\n            .then(this._checkResponse);\r\n    }\r\n\r\n    _checkResponse(res) {\r\n        if (res.ok) { return res.json() }\r\n        return Promise.reject(res);\r\n    }\r\n\r\n}\r\n\r\nconst api = new Api({\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-29',\r\n    headers: {\r\n        authorization: 'abaeba32-e658-413f-86b2-3d2488ef3044',\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\nexport default api;","export const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\n//Запрос на регистрацию\r\nexport const register = (email, password) => {\r\n    return fetch(`${BASE_URL}/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ email, password })\r\n    })\r\n        .then(res => {\r\n            return checkResponse(res);\r\n        });\r\n};\r\n\r\n//Вход в систему\r\nexport const signin = (email, password) => {\r\n    return fetch(`${BASE_URL}/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ email, password })\r\n    })\r\n        .then(res => {\r\n            return checkResponse(res);\r\n        })\r\n        .then(data => {\r\n            localStorage.setItem('token', data.token);\r\n            return data;\r\n        });\r\n}\r\n\r\n//Проверка токена\r\nexport const getContent = token => {\r\n    return fetch(`${BASE_URL}/users/me`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(res => {\r\n            return checkResponse(res);\r\n        });\r\n}\r\n\r\nfunction checkResponse(res) {\r\n    if (res.ok) { return res.json() }\r\n    return Promise.reject(`Что-то пошло не так: ${res.status}`);\r\n}","import Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport ImagePopup from './ImagePopup';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport InfoTooltip from './InfoTooltip';\r\nimport { useState, useEffect } from \"react\";\r\nimport api from \"../utils/api\";\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport { Route, Routes, useNavigate } from 'react-router-dom';\r\nimport * as auth from '../utils/auth.js';\r\n\r\nfunction App() {\r\n  const [currentUser, setCurrentUser] = useState({});\r\n  const [cards, setCards] = useState([]);\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [currentEmail, setCurrentEmail] = useState('');\r\n  let navigate = useNavigate();\r\n\r\n  function handleQuit() {\r\n    localStorage.removeItem('token');\r\n    setLoggedIn(false);\r\n  }\r\n\r\n  //Переадресация пользователя\r\n  useEffect(() => {\r\n    loggedIn ? navigate('/react-mesto-auth') : navigate('/react-mesto-auth/sign-in');\r\n  }, [loggedIn]);\r\n\r\n  //Запрос на регистрацию\r\n  function onRegister(email, password) {\r\n    auth.register(email, password)\r\n      .then(res => {\r\n        handleInfoTooltipType(true);\r\n        handleInfoTooltipOpen();\r\n      })\r\n      .catch(err => {\r\n        handleInfoTooltipType(false);\r\n        handleInfoTooltipOpen();\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  //Запрос на авторизацию\r\n  function onLogin(email, password, setEmail, setPassword) {\r\n    auth.signin(email, password)\r\n      .then(() => {\r\n        setCurrentEmail(email);\r\n        setEmail('');\r\n        setPassword('');\r\n        setLoggedIn(true);\r\n      })\r\n      .catch(err => {\r\n        handleInfoTooltipType(false);\r\n        handleInfoTooltipOpen();\r\n        console.log(err)\r\n      });\r\n  }\r\n\r\n  //Проверка токена и авторизация пользователя\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      auth.getContent(token)\r\n        .then((res) => {\r\n          if (res) {\r\n            setLoggedIn(true);\r\n            setCurrentEmail(res.data.email);\r\n          }\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n  }, []);\r\n\r\n  //Получение карточек при монтировании\r\n  useEffect(() => {\r\n    api.getCardList()\r\n      .then(data => {\r\n        setCards(data);\r\n      })\r\n      .catch((res) => {\r\n        console.log(`Что-то пошло не так: ${res.statusText}`);\r\n      });\r\n  }, []);\r\n\r\n  //Получение информации о пользователе при монтировании\r\n  useEffect(() => {\r\n    api.getUserInfo()\r\n      .then(data => {\r\n        setCurrentUser(data);\r\n      })\r\n      .catch((res) => {\r\n        console.log(`Что-то пошло не так: ${res.statusText}`);\r\n      });\r\n  }, []);\r\n\r\n  //Функция лайка карточки\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    api.likeCard(card._id, isLiked ? 'DELETE' : 'PUT')\r\n      .then((newCard) => {\r\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\r\n      })\r\n      .catch((res) => {\r\n        console.log(`Что-то пошло не так: ${res.statusText}`);\r\n      });\r\n  }\r\n\r\n  //Функция удаления карточки\r\n  function handleCardDelete(card) {\r\n    api.deleteCard(card.id)\r\n      .then(() => {\r\n        setCards((state) => state.filter((c) => c._id !== card.id));\r\n      })\r\n      .catch((res) => {\r\n        console.log(`Что-то пошло не так: ${res.statusText}`);\r\n      });\r\n  }\r\n\r\n  //Функция закрытия попапа при нажатии на бэк\r\n  function handlePopupClick(event) {\r\n    if (event.target.classList.contains(\"popup\")) {\r\n      closeAllPopups()\r\n    }\r\n  }\r\n\r\n  //Состояния попапов и тултипа\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n  const [isBigImagePopupOpen, setIsBigImagePopupOpen] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState({});\r\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\r\n  const [isInfoTooltipType, setIsInfoTooltipType] = useState(false);\r\n\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n    setIsBigImagePopupOpen(true);\r\n  }\r\n\r\n  function handleInfoTooltipOpen() {\r\n    setIsInfoTooltipOpen(true);\r\n  }\r\n\r\n  function handleInfoTooltipClose() {\r\n    setIsInfoTooltipOpen(false);\r\n    if (isInfoTooltipType) {\r\n      navigate('/react-mesto-auth/sign-in');\r\n    }\r\n  }\r\n\r\n  function handleInfoTooltipType(type) {\r\n    setIsInfoTooltipType(type);\r\n  }\r\n\r\n  function closeAllPopups() {\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsBigImagePopupOpen(false);\r\n    setSelectedCard({});\r\n  }\r\n\r\n  //Обновление информации о пользователе\r\n  function handleUpdateUser(user) {\r\n    api.saveUserInfo(user)\r\n      .then(data => {\r\n        setCurrentUser(data);\r\n        closeAllPopups();\r\n      })\r\n      .catch((res) => {\r\n        console.log(`Что-то пошло не так: ${res.statusText}`);\r\n      });\r\n  }\r\n\r\n  //Обновление аватара\r\n  function handleUpdateAvatar(avatar) {\r\n    api.editAvatar(avatar)\r\n      .then(data => {\r\n        setCurrentUser(data);\r\n        closeAllPopups();\r\n      })\r\n      .catch((res) => {\r\n        console.log(`Что-то пошло не так: ${res.statusText}`);\r\n      });\r\n  }\r\n\r\n  //Добавление новой карточки\r\n  function handleAddPlace(card) {\r\n    api.addCard(card)\r\n      .then(newCard => {\r\n        setCards([newCard, ...cards]);\r\n        closeAllPopups();\r\n      })\r\n      .catch((res) => {\r\n        console.log(`Что-то пошло не так: ${res.statusText}`);\r\n      });\r\n  }\r\n\r\n  //Закрытие попапов на Esc\r\n  useEffect(() => {\r\n    if (isEditProfilePopupOpen || isAddPlacePopupOpen || isEditAvatarPopupOpen || isBigImagePopupOpen) {\r\n\r\n      function handleEsc(event) {\r\n        if (event.key === 'Escape') {\r\n          closeAllPopups();\r\n        }\r\n      }\r\n\r\n      document.addEventListener('keydown', handleEsc)\r\n\r\n      return () => {\r\n        document.removeEventListener('keydown', handleEsc)\r\n      }\r\n    }\r\n  }, [isEditProfilePopupOpen, isAddPlacePopupOpen, isEditAvatarPopupOpen, isBigImagePopupOpen])\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className='page'>\r\n        <div className='page__content'>\r\n          <Header email={currentEmail} handleQuit={handleQuit} loggedIn={loggedIn} />\r\n\r\n          <Routes>\r\n            <Route path='/react-mesto-auth' element={\r\n              <>\r\n                <Main\r\n                  onEditProfile={handleEditProfileClick}\r\n                  onAddPlace={handleAddPlaceClick}\r\n                  onEditAvatar={handleEditAvatarClick}\r\n                  onImagePopup={handleCardClick}\r\n                  cards={cards}\r\n                  onCardLike={handleCardLike}\r\n                  onCardDelete={handleCardDelete}\r\n                  onCardClick={handleCardClick}\r\n                />\r\n                <Footer />\r\n              </>\r\n            } />\r\n\r\n            <Route path='/react-mesto-auth/sign-in'\r\n              element={<Login onLogin={onLogin} />} />\r\n\r\n            <Route path='/react-mesto-auth/sign-up'\r\n              element={<Register onRegister={onRegister} />} />\r\n          </Routes>\r\n\r\n          <EditProfilePopup\r\n            isOpen={isEditProfilePopupOpen}\r\n            onClose={closeAllPopups}\r\n            onPopupClick={handlePopupClick}\r\n            onUpdateUser={handleUpdateUser} />\r\n\r\n          <AddPlacePopup\r\n            isOpen={isAddPlacePopupOpen}\r\n            onClose={closeAllPopups}\r\n            onPopupClick={handlePopupClick}\r\n            onAddPlace={handleAddPlace} />\r\n\r\n          <EditAvatarPopup\r\n            isOpen={isEditAvatarPopupOpen}\r\n            onClose={closeAllPopups}\r\n            onPopupClick={handlePopupClick}\r\n            onUpdateAvatar={handleUpdateAvatar} />\r\n\r\n          <ImagePopup\r\n            card={selectedCard}\r\n            onClose={closeAllPopups}\r\n            isOpen={isBigImagePopupOpen}\r\n            onPopupClick={handlePopupClick} />\r\n\r\n          <InfoTooltip\r\n            isOpen={isInfoTooltipOpen}\r\n            onClose={handleInfoTooltipClose}\r\n            type={isInfoTooltipType} />\r\n        </div>\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}